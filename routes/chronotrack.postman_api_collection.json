{
	"info": {
		"_postman_id": "0ac9f9fc-2459-452d-801d-b496cfd22b5c",
		"name": "chronotrack",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "8820482"
	},
	"item": [
		{
			"name": "Login",
			"item": []
		},
		{
			"name": "Project",
			"item": [
				{
					"name": "Project",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const json = pm.response.json();\r",
									"\r",
									"if (json.data && json.data.id) {\r",
									"    pm.environment.set(\"project_id\", json.data.id);\r",
									"    console.log(\"✅ project_id set:\", json.data.id);\r",
									"}\r",
									""
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"I lost track of time\",\r\n  \"description\": \"Redesign ChronoTrack’s internal time tracker module.\",\r\n  \"deadline\": \"2025-10-15\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/projects",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects"
							]
						}
					},
					"response": []
				},
				{
					"name": "Projects",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "file",
							"file": {}
						},
						"url": {
							"raw": "{{base_url}}/projects?name=I%20lost%20track%20of%20time&from=2024-01-01&to=2025-12-31&sortBy=deadline",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects"
							],
							"query": [
								{
									"key": "name",
									"value": "I%20lost%20track%20of%20time"
								},
								{
									"key": "from",
									"value": "2024-01-01"
								},
								{
									"key": "to",
									"value": "2025-12-31"
								},
								{
									"key": "sortBy",
									"value": "deadline"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Project",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "file",
							"file": {}
						},
						"url": {
							"raw": "{{base_url}}/projects?name=I%20lost%20track%20of%20time&from=2024-01-01&to=2026-12-31&sort_by=deadline&id={{project_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects"
							],
							"query": [
								{
									"key": "name",
									"value": "I%20lost%20track%20of%20time"
								},
								{
									"key": "from",
									"value": "2024-01-01"
								},
								{
									"key": "to",
									"value": "2026-12-31"
								},
								{
									"key": "sort_by",
									"value": "deadline"
								},
								{
									"key": "id",
									"value": "{{project_id}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Timers",
			"item": [
				{
					"name": "Timer Stop",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const json = pm.response.json();\r",
									"\r",
									"if (json.data && json.data.id) {\r",
									"    pm.environment.set(\"project_id\", json.data.id);\r",
									"    console.log(\"✅ project_id set:\", json.data.id);\r",
									"}\r",
									""
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/tasks/{{task_id}}/timers/stop",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"tasks",
								"{{task_id}}",
								"timers",
								"stop"
							]
						}
					},
					"response": []
				},
				{
					"name": "Timer Start",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const json = pm.response.json();\r",
									"\r",
									"if (json.data && json.data.id) {\r",
									"    pm.environment.set(\"project_id\", json.data.id);\r",
									"    console.log(\"✅ project_id set:\", json.data.id);\r",
									"}\r",
									""
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"I lost track of time\",\r\n  \"description\": \"Redesign ChronoTrack’s internal time tracker module.\",\r\n  \"deadline\": \"2025-10-15\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/tasks/{{task_id}}/timers/start",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"tasks",
								"{{task_id}}",
								"timers",
								"start"
							]
						}
					},
					"response": []
				},
				{
					"name": "Timer",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "file",
							"file": {}
						},
						"url": {
							"raw": "{{base_url}}/tasks/{{task_id}}/timers?active=false&started_at=2024-01-01&stopped_at=2026-12-31",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"tasks",
								"{{task_id}}",
								"timers"
							],
							"query": [
								{
									"key": "active",
									"value": "false"
								},
								{
									"key": "started_at",
									"value": "2024-01-01"
								},
								{
									"key": "stopped_at",
									"value": "2026-12-31"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Task",
			"item": [
				{
					"name": "Task",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const json = pm.response.json();\r",
									"\r",
									"if (json.data && json.data.id) {\r",
									"    pm.environment.set(\"task_id\", json.data.id);\r",
									"    console.log(\"✅ task_id set:\", json.data.id);\r",
									"} else {\r",
									"    console.warn(\"⚠️ No task_id found in response:\", json);\r",
									"}\r",
									""
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"title\": \"Practice Extended Euclidean Algorithm\",\r\n  \"description\": \"Focus on symbolic manipulation, GCD chain, and substitution steps.\",\r\n  \"due_at\": \"2025-12-10T17:00:00\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/projects/{{project_id}}/tasks",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								"{{project_id}}",
								"tasks"
							]
						}
					},
					"response": []
				},
				{
					"name": "Task",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/projects/{{project_id}}/tasks?title=euclidean&from=2024-01-01&to=2026-12-31&sort_by=due_at&order=asc",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								"{{project_id}}",
								"tasks"
							],
							"query": [
								{
									"key": "title",
									"value": "euclidean"
								},
								{
									"key": "from",
									"value": "2024-01-01"
								},
								{
									"key": "to",
									"value": "2026-12-31"
								},
								{
									"key": "sort_by",
									"value": "due_at"
								},
								{
									"key": "order",
									"value": "asc"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Goals",
			"item": [
				{
					"name": "Goal",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const json = pm.response.json();\r",
									"\r",
									"if (json.id && json.id) {\r",
									"    pm.environment.set(\"goal_id\", json.id);\r",
									"    console.log(\"✅ goal_id set:\", json.id);\r",
									"}\r",
									""
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"title\": \"Finish Stage 3.5 CRUD cleanup\",\r\n  \"description\": \"Enforce ownership rules and close Goals MVP\",\r\n  \"status\": \"active\",\r\n  \"deadline\": \"2025-10-01\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/projects/{{project_id}}/goals",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								"{{project_id}}",
								"goals"
							]
						}
					},
					"response": []
				},
				{
					"name": "Goal Collection",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/projects/{{project_id}}/goals?status=active&deadline=2025-12-31",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								"{{project_id}}",
								"goals"
							],
							"query": [
								{
									"key": "status",
									"value": "active"
								},
								{
									"key": "deadline",
									"value": "2025-12-31"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Goal Collection Filtered",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/projects/{{project_id}}/goals?status=active&deadline=2025-12-31&id={{goal_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								"{{project_id}}",
								"goals"
							],
							"query": [
								{
									"key": "status",
									"value": "active"
								},
								{
									"key": "deadline",
									"value": "2025-12-31"
								},
								{
									"key": "id",
									"value": "{{goal_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "New Request",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{access_token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"requests": {},
				"exec": [
					"pm.sendRequest({\r",
					"    url: pm.variables.get(\"base_url\") + \"/login\",\r",
					"    method: \"POST\",\r",
					"    header: { \"Content-Type\": \"application/json\" },\r",
					"    body: {\r",
					"        mode: \"raw\",\r",
					"        raw: JSON.stringify({\r",
					"            email: \"daniel@chronotrack.com\",\r",
					"            password: \"password123\"\r",
					"        })\r",
					"    }\r",
					"}, (err, res) => {\r",
					"    if (!err) {\r",
					"        let json = res.json();\r",
					"        pm.collectionVariables.set(\"authToken\", json.token);\r",
					"    }\r",
					"});\r",
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"requests": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "task_id",
			"value": ""
		},
		{
			"key": "base_url",
			"value": ""
		},
		{
			"key": "authToken",
			"value": ""
		}
	]
}